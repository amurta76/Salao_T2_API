// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minha1Conexao.Data;

namespace SalaoT2.Data.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SalaoT2.Dominio.Agendamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anotacao")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAgendamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataChegada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServicoSolicitadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicoSolicitadoId");

                    b.ToTable("Agendamento");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Complemento")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)");

                    b.Property<Guid>("TurnoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("SalaoT2.Dominio.FuncionarioServico", b =>
                {
                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FuncionarioId", "ServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("FuncionarioServico");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MinutosParaExecucao")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("SalaoT2.Dominio.ServicoSolicitado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataServico")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FuncionarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicoId");

                    b.ToTable("ServicoSolicitado");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Turno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EntradaSabado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntradaSemana")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SaidaSabado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SaidaSemana")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoTurno")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Turno");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Agendamento", b =>
                {
                    b.HasOne("SalaoT2.Dominio.Cliente", "Cliente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaoT2.Dominio.ServicoSolicitado", "ServicoSolicitado")
                        .WithMany("Agendamentos")
                        .HasForeignKey("ServicoSolicitadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("ServicoSolicitado");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Funcionario", b =>
                {
                    b.HasOne("SalaoT2.Dominio.Endereco", "Endereco")
                        .WithMany("Funcionarios")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaoT2.Dominio.Turno", "Turno")
                        .WithMany("Funcionarios")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("SalaoT2.Dominio.FuncionarioServico", b =>
                {
                    b.HasOne("SalaoT2.Dominio.Funcionario", "Funcionario")
                        .WithMany("FuncionarioServicos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaoT2.Dominio.Servico", "Servico")
                        .WithMany("FuncionarioServicos")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("SalaoT2.Dominio.ServicoSolicitado", b =>
                {
                    b.HasOne("SalaoT2.Dominio.Funcionario", "Funcionario")
                        .WithMany("ServicoSolicitados")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaoT2.Dominio.Servico", "Servico")
                        .WithMany("ServicoSolicitados")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Cliente", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Endereco", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Funcionario", b =>
                {
                    b.Navigation("FuncionarioServicos");

                    b.Navigation("ServicoSolicitados");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Servico", b =>
                {
                    b.Navigation("FuncionarioServicos");

                    b.Navigation("ServicoSolicitados");
                });

            modelBuilder.Entity("SalaoT2.Dominio.ServicoSolicitado", b =>
                {
                    b.Navigation("Agendamentos");
                });

            modelBuilder.Entity("SalaoT2.Dominio.Turno", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
